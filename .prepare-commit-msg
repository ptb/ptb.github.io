#!/bin/sh

if git rev-parse --verify HEAD >/dev/null 2>&1; then
  against=HEAD
else
  # Initial commit: diff against an empty tree object
  against=$(git hash-object -t tree /dev/null)
fi

MSG=$(cat "$1")
/bin/echo -n '' > $1

i="0"
j=$(git diff-index --cached --find-renames --name-status $against | wc -l)

git diff-index --cached --find-renames --name-status $against | \
  while read line && [ $i -lt 10 ]; do
    status=$(cut -f1 <<< "$line")
    name=$(cut -f2 <<< "$line")
    if [[ $name =~ (.*\.app)\/.+ ]]; then
      if [[ $name =~ .*\.app\/Contents\/Info\.plist ]]; then
        name=$(/bin/echo $name | sed -n -E -e "s/(.*\.app).*/\1/p")
      else
        continue
      fi
    fi
    case $status in
      A) /bin/echo -n "add file '$name'" >> $1;;
      D) /bin/echo -n "delete file '$name'" >> $1;;
      M) /bin/echo -n "modify file '$name'" >> $1;;
      R*)
        name1=$(cut -f2 <<< "$line")
        name2=$(cut -f3- <<< "$line")
        /bin/echo -n "rename file '$name1' to '$name2'" >> $1;;
    esac
    printf '\0' >> $1
    i=$[$i+1]
    if [ $i -eq 10 ]; then
      j=$[$j-$i]
      /bin/echo -n "$j more file changes" >> $1
      printf '\0' >> $1
    fi
done

OXFORD=$(cat "$1" | perl -np -e 's/\0$//' | perl -np -e 's/(\0[^\0]+\0)([^\0]+)$/\1and \2/' | perl -np -e 's/^([^\0]+)\0([^\0]+)$/\1 and \2/' | perl -np -e 's/\0+/, /g' | perl -nE 'say ucfirst')
echo "$OXFORD" > $1
echo "$MSG" >> $1
